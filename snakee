<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f4f4f4;
        }
        canvas {
            border: 1px solid black;
            background-color: #000;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="400" height="400"></canvas>

    <script>
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");

        const scale = 20;
        const rows = canvas.height / scale;
        const columns = canvas.width / scale;

        let snake;
        let food;

        (function setup() {
            snake = new Snake();
            food = new Food();
            window.setInterval(gameLoop, 100);
        })();

        function gameLoop() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            snake.move();
            snake.draw();
            food.draw();

            if (snake.eat(food)) {
                food = new Food();
            }

            if (snake.collide()) {
                alert("Game Over");
                snake.reset();
            }
        }

        function Snake() {
            this.body = [{ x: 5, y: 5 }];
            this.direction = "RIGHT";

            this.move = function() {
                const head = { ...this.body[0] };

                if (this.direction === "UP") head.y -= 1;
                if (this.direction === "DOWN") head.y += 1;
                if (this.direction === "LEFT") head.x -= 1;
                if (this.direction === "RIGHT") head.x += 1;

                this.body.unshift(head);
                this.body.pop();
            };

            this.draw = function() {
                ctx.fillStyle = "green";
                this.body.forEach(segment => {
                    ctx.fillRect(segment.x * scale, segment.y * scale, scale, scale);
                });
            };

            this.changeDirection = function(event) {
                if (event.key === "ArrowUp" && this.direction !== "DOWN") this.direction = "UP";
                if (event.key === "ArrowDown" && this.direction !== "UP") this.direction = "DOWN";
                if (event.key === "ArrowLeft" && this.direction !== "RIGHT") this.direction = "LEFT";
                if (event.key === "ArrowRight" && this.direction !== "LEFT") this.direction = "RIGHT";
            };

            this.eat = function(food) {
                if (this.body[0].x === food.position.x && this.body[0].y === food.position.y) {
                    this.body.push({});  // Grow the snake
                    return true;
                }
                return false;
            };

            this.collide = function() {
                const head = this.body[0];
                // Wall collision
                if (head.x < 0 || head.x >= columns || head.y < 0 || head.y >= rows) return true;
                // Self collision
                for (let i = 1; i < this.body.length; i++) {
                    if (head.x === this.body[i].x && head.y === this.body[i].y) return true;
                }
                return false;
            };

            this.reset = function() {
                this.body = [{ x: 5, y: 5 }];
                this.direction = "RIGHT";
            };
        }

        function Food() {
            this.position = { x: 10, y: 10 };

            this.draw = function() {
                ctx.fillStyle = "red";
                ctx.fillRect(this.position.x * scale, this.position.y * scale, scale, scale);
            };
        }

        window.addEventListener("keydown", function(event) {
            snake.changeDirection(event);
        });
    </script>
</body>
</html>
